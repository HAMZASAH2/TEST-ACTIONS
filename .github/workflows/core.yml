# Core Odoo Unit Tests - Most Critical
name: Odoo Unit Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-22.04
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            /tmp/odoo
          key: ${{ runner.os }}-odoo-${{ hashFiles('**/requirements.txt') }}-v2
          restore-keys: |
            ${{ runner.os }}-odoo-
            
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev python3-dev
            
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psycopg2-binary babel "lxml[html_clean]" pillow reportlab \
          python-dateutil pytz requests werkzeug jinja2 passlib decorator docutils gevent \
          greenlet markupsafe num2words ofxparse polib psutil python-stdnum qrcode \
          vobject xlsxwriter xlwt zeep pypdf freezegun requests rjsmin
          
      - name: Setup Odoo
        run: |
          if [ ! -d "/tmp/odoo" ]; then
            echo "📥 Downloading Odoo..."
            git clone --depth 1 --branch 18.0 https://github.com/odoo/odoo.git /tmp/odoo
            pip install -r /tmp/odoo/requirements.txt
          fi
          pip install -e /tmp/odoo

      - name: Detect changed modules
        id: changed
        run: |
          echo "🔄 Detecting changed modules..."
          
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA="HEAD~1"
          fi
          
          changed_files=$(git diff --name-only $BASE_SHA HEAD)
          modules=$(find . -name "__manifest__.py" -type f | sed 's|/__manifest__.py||' | sed 's|^\./||')
          
          changed_modules=""
          while IFS= read -r module; do
            if echo "$changed_files" | grep -q "^$module/"; then
              changed_modules="$changed_modules $module"
            fi
          done <<< "$modules"
          
          echo "changed_modules=$changed_modules" >> $GITHUB_OUTPUT
          
      - name: Run Unit Tests
        if: steps.changed.outputs.changed_modules != ''
        run: |
          echo "🧪 Running unit tests on changed modules..."
          
          cat > odoo.conf << EOF
          [options]
          db_host = localhost
          db_port = 5432
          db_user = odoo
          db_password = odoo
          addons_path = /tmp/odoo/addons,.
          log_level = warn
          EOF
          
          until pg_isready -h localhost -p 5432 -U odoo; do
            echo "⏳ Waiting for PostgreSQL..."
            sleep 1
          done
          
          for module in ${{ steps.changed.outputs.changed_modules }}; do
            echo "🧪 Testing $module..."
            db_name="test_${module}_$(date +%s)"
            
            timeout 300 python3 /tmp/odoo/odoo-bin \
              -c odoo.conf \
              -d "$db_name" \
              --init="$module" \
              --test-enable \
              --stop-after-init \
              --log-level=error \
              || exit 1
            
            echo "✅ $module tests passed"
            psql -h localhost -U odoo -c "DROP DATABASE IF EXISTS $db_name;" postgres || true
          done
          
        env:
          PGPASSWORD: odoo