# Odoo CI/CD Workflow
name: Odoo CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    
    # Service containers to run with the job
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libpq-dev \
            libxml2-dev \
            libxslt1-dev \
            libldap2-dev \
            libsasl2-dev \
            libjpeg-dev \
            libfreetype6-dev \
            zlib1g-dev \
            wkhtmltopdf
            
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint-odoo wheel setuptools bc
          
      - name: Clone Odoo
        run: |
          git clone --depth 1 --branch 18.0 https://github.com/odoo/odoo.git /tmp/odoo
          
      - name: Install Odoo dependencies
        run: |
          # Create a modified requirements file without problematic packages
          grep -v '^gevent==21.8.0' /tmp/odoo/requirements.txt | \
          grep -v '^python-ldap' | \
          grep -v '^psycopg2' > /tmp/requirements-modified.txt
          
          # Add compatible versions
          echo "psycopg2-binary>=2.8.6" >> /tmp/requirements-modified.txt
          echo "python-ldap>=3.3.1" >> /tmp/requirements-modified.txt
          
          pip install -r /tmp/requirements-modified.txt
          
      - name: Create Odoo pylint configuration
        run: |
          cat > .pylintrc << EOF
          [MASTER]
          load-plugins = pylint_odoo
          score = no
          
          [ODOOLINT]
          readme_template_url="https://github.com/OCA/maintainer-tools/blob/master/template/module/README.rst"
          manifest_required_authors=Odoo Community Association (OCA)
          manifest_required_keys=name,description,author,website,category,version,depends,installable
          manifest_deprecated_keys=description,active
          license_allowed=AGPL-3,GPL-2,GPL-2 or any later version,GPL-3,GPL-3 or any later version,LGPL-3,BSD-2-Clause,BSD-3-Clause,MIT
          
          [MESSAGES CONTROL]
          disable = all
          enable = anomalous-backslash-in-string,
                   api-one-deprecated,
                   api-one-multi-together,
                   attribute-deprecated,
                   class-camelcase,
                   consider-merging-classes-inherited,
                   copy-wo-api-one,
                   create-user-wo-reset-password,
                   dangerous-filter-wo-user,
                   dangerous-view-replace-wo-priority,
                   duplicate-id-csv,
                   duplicate-xml-fields,
                   duplicate-xml-record-id,
                   eval-referenced,
                   eval-used,
                   incoherent-interpreter-exec-perm,
                   license-allowed,
                   manifest-author-string,
                   manifest-deprecated-key,
                   manifest-required-key,
                   manifest-version-format,
                   method-compute,
                   method-inverse,
                   method-required-super,
                   method-search,
                   missing-import-error,
                   missing-manifest-dependency,
                   openerp-exception-warning,
                   pointless-statement,
                   pointless-string-statement,
                   print-used,
                   redundant-keyword-arg,
                   redundant-modulename-xml,
                   reimported,
                   relative-import,
                   return-in-init,
                   rst-syntax-error,
                   sql-injection,
                   too-complex,
                   translation-field,
                   translation-required,
                   unused-argument,
                   unused-import,
                   unused-variable,
                   use-vim-comment,
                   wrong-tabs-instead-of-spaces,
                   xml-syntax-error
          
          [REPORTS]
          reports = no
          EOF
          
      - name: Run Odoo pylint on module
        id: pylint
        run: |
          if [ -d "simple_module" ]; then
            # Run pylint with Odoo-specific configuration
            pylint_output=$(pylint --load-plugins=pylint_odoo \
              --rcfile=.pylintrc \
              simple_module \
              --exit-zero \
              --output-format=text | tee pylint.log)
            
            pylint_score=$(echo "$pylint_output" | grep 'Your code has been rated at' | awk '{print $7}' | cut -d'/' -f1)
            
            echo "Pylint score: $pylint_score"
            echo "pylint_score=$pylint_score" >> $GITHUB_OUTPUT
            
            # Check if score is below threshold
            if (( $(echo "$pylint_score < 7.0" | bc -l) )); then
              echo "::error::Pylint score ($pylint_score) is below 7.0 (Odoo standard). Failing the build."
              exit 1
            fi
          else
            echo "::warning::Module directory simple_module not found, skipping pylint"
          fi
          
      - name: Generate Odoo configuration
        run: |
          cat > odoo.conf << EOF
          [options]
          db_host = localhost
          db_port = 5432
          db_user = odoo
          db_password = odoo
          db_name = test_db
          addons_path = /tmp/odoo/addons,TEST-ACTIONS
          log_level = test
          EOF
          
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U odoo; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          
      - name: Run Odoo tests
        run: |
          if [ -d "simple_module" ]; then
            python3 /tmp/odoo/odoo-bin \
              -c odoo.conf \
              -d test_db \
              --init=simple_module \
              --test-enable \
              --stop-after-init \
              --log-level=test
          else
            echo "::warning::Module directory not found, skipping tests"
          fi
        env:
          PGUSER: odoo
          PGPASSWORD: odoo
          PGHOST: localhost
          PGPORT: 5432
          
      - name: Upload pylint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pylint-report
          path: pylint.log