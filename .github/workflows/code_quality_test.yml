# Optional Code Quality Checks
name: Code Quality

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run quality checks'
        required: false
        default: 'false'

jobs:
  code-quality:
    runs-on: ubuntu-22.04
    # Make this job optional - won't block other workflows
    continue-on-error: true
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint-odoo
          
      - name: Detect changed modules
        id: changed
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA="HEAD~1"
          fi
          
          changed_files=$(git diff --name-only $BASE_SHA HEAD)
          modules=$(find . -name "__manifest__.py" -type f | sed 's|/__manifest__.py||' | sed 's|^\./||')
          
          changed_modules=""
          while IFS= read -r module; do
            if echo "$changed_files" | grep -q "^$module/"; then
              changed_modules="$changed_modules $module"
            fi
          done <<< "$modules"
          
          echo "changed_modules=$changed_modules" >> $GITHUB_OUTPUT
          
      - name: Create pylint configuration
        if: steps.changed.outputs.changed_modules != ''
        run: |
          cat > .pylintrc << EOF
          [MASTER]
          load-plugins=pylint_odoo
          score=y
          
          [ODOOLINT]
          readme_template_url="https://github.com/OCA/maintainer-tools/blob/master/template/module/README.rst"
          manifest_required_authors=True
          manifest_required_keys=name,author,website,license
          manifest_deprecated_keys=description,active
          
          [MESSAGES CONTROL]
          disable=all
          enable=odoolint,
                 anomalous-backslash-in-string,
                 dangerous-default-value,
                 duplicate-key,
                 missing-import-error,
                 missing-manifest-dependency,
                 pointless-statement,
                 print-statement,
                 redundant-keyword-arg,
                 reimported,
                 relative-import,
                 unused-argument,
                 unused-variable,
                 wrong-import-order
          
          [REPORTS]
          reports=no
          EOF
          
      - name: Run pylint (Optional Quality Check)
        if: steps.changed.outputs.changed_modules != ''
        continue-on-error: true
        run: |
          echo "🔍 Running pylint quality checks..."
          
          for module in ${{ steps.changed.outputs.changed_modules }}; do
            echo "🧪 Linting $module..."
            
            pylint_output=$(pylint --load-plugins=pylint_odoo \
              --rcfile=.pylintrc \
              "$module" \
              --exit-zero \
              --output-format=text)
            
            echo "$pylint_output"
            
            score=$(echo "$pylint_output" | grep -o 'rated at [0-9.]*' | grep -o '[0-9.]*' | head -1)
            
            if [ ! -z "$score" ]; then
              echo "📊 $module pylint score: $score/10"
              
              if (( $(echo "$score < 6.0" | bc -l) )); then
                echo "⚠️ $module has quality issues (score: $score < 6.0)"
              else
                echo "✅ $module meets quality standards"
              fi
            fi
          done