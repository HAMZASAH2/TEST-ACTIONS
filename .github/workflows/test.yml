# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Odoo and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          # Install Odoo dependencies (example for Odoo 18, adjust as needed)
          pip install wheel setuptools
          git clone --depth 1 --branch 18.0 https://github.com/odoo/odoo.git /tmp/odoo
          # Remove problematic gevent version from requirements
          grep -v '^gevent==21.8.0' /tmp/odoo/requirements.txt > /tmp/odoo/requirements-no-gevent.txt
          pip install -r /tmp/odoo/requirements-no-gevent.txt
      - name: Run pylint on simple_module
        id: pylint
        run: |
          pylint_score=$(pylint TEST-ACTIONS/simple_module --exit-zero --output-format=text | tee pylint.log | grep 'Your code has been rated at' | awk '{print $7}' | cut -d'/' -f1)
          echo "Pylint score: $pylint_score"
          if (( $(echo "$pylint_score < 5" | bc -l) )); then
            echo "::error ::Pylint score is below 5. Cancelling workflow."
            exit 1
          fi
      - name: Run Odoo unit tests
        run: |
          python3 /tmp/odoo/odoo-bin -c odoo.conf -d test_db --init=TEST-ACTIONS/simple_module --test-enable --stop-after-init
        env:
          # Set Odoo config and DB environment as needed
          PGUSER: postgres
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: test_db
